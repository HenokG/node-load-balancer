well i think we should use a Publisher/Subscriber model to solve this problem
publisher being an application that generates events at one end of the data pipeline
subscriber being an application that responds to events at another end of the data pipeline

we will have a queue manager program/node which will facilitate the subscribers and publishers

if event is published when multiple subscribers are connected to the queue, the event
gets broadcasted to all the subscribers, and each subscriber receives the same
event.
if no subscriber connects to the queue after the publisher publishes an event, the event
is managed by the queue manager(may delete it if that is our policy). In "Google Cloud
Computing Cloud Pub/Sub" the messages are stored for 7 days before getting deleted.
